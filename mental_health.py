# -*- coding: utf-8 -*-
"""mental_health.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11hf5RAzRPe2ZHpfKanX1zCBT5souuXGO
"""

from google.colab import files
uploaded = files.upload()

!ls

!python preprocess.py
!python analysis.py

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv('cleaned_mental_health_data.csv')
df.info()

df = df.drop(columns=['Unnamed: 15', 'Unnamed: 16'], errors='ignore')

X = df.drop('Risk Category', axis=1)
y = df['Risk Category']

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

model = DecisionTreeClassifier(criterion='entropy', max_depth=5, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("\nClassification Report:\n", classification_report(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)

plt.figure(figsize=(6,4))

sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',
            xticklabels=['Low', 'Moderate', 'High'],
            yticklabels=['Low', 'Moderate', 'High'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

y_test_bin = pd.get_dummies(y_test)

y_pred_proba = model.predict_proba(X_test)

for i in range(len(model.classes_)):
    fpr, tpr, _ = roc_curve(y_test_bin.iloc[:, i], y_pred_proba[:, i])
    roc_auc = auc(fpr, tpr)
    plt.plot(fpr, tpr, label=f'Class {model.classes_[i]} (AUC = {roc_auc:.2f})')
plt.plot([0,1],[0,1],'k--')
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('ROC Curve - Multi-class')
plt.legend()
plt.show()

plt.figure(figsize=(15,10))
plot_tree(model, filled=True, feature_names=X.columns, class_names=['Low','Moderate','High'])
plt.show()